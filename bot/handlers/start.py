#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –∏ –ª–æ–≥–∏–∫–∏ –ø–æ—ç—Ç–∞–ø–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
"""

from telegram import Update, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from telegram.ext import ContextTypes, CommandHandler, MessageHandler, filters

from db.database import get_db
from bot.services.patient_service import create_or_get_patient, update_patient_profile

def get_phone_request_keyboard():
    button = KeyboardButton(text="üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä", request_contact=True)
    return ReplyKeyboardMarkup([[button]], resize_keyboard=True, one_time_keyboard=True)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–°—Ç–∞—Ä—Ç –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    db = next(get_db())
    patient = create_or_get_patient(db, user.id)

    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.\n\n"
        "–ù–∞–ø–∏—à–∏: *–°–æ–≥–ª–∞—Å–µ–Ω*",
        parse_mode='Markdown'
    )
    update_patient_profile(db, patient, bot_state="awaiting_consent")


async def handle_consent(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    text = update.message.text.strip().lower()

    db = next(get_db())
    patient = create_or_get_patient(db, user.id)

    if patient.bot_state != "awaiting_consent":
        return

    if "—Å–æ–≥–ª–∞—Å–µ–Ω" not in text:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏ '–°–æ–≥–ª–∞—Å–µ–Ω', —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.")
        return

    update_patient_profile(db, patient, bot_state="awaiting_full_name")
    await update.message.reply_text("–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ —Å–≤–æ—ë –ø–æ–ª–Ω–æ–µ –§–ò–û.")


async def handle_full_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    full_name = update.message.text.strip()

    db = next(get_db())
    patient = create_or_get_patient(db, user.id)

    if patient.bot_state != "awaiting_full_name":
        return

    update_patient_profile(db, patient, full_name=full_name, bot_state="awaiting_phone_number")

    await update.message.reply_text(
        f"–°–ø–∞—Å–∏–±–æ, {full_name}!\n–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ ‚¨áÔ∏è",
        reply_markup=get_phone_request_keyboard()
    )


def register_handlers(application):
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), handle_consent))
    application.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), handle_full_name))
